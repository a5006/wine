<template>
  <div>
    <Gheader title="我的代理资格券" back="1" />
    <!-- tabs -->
    <van-tabs v-model="active" sticky @click="switchTab">
      <van-tab class="con" :title="item.title" v-for="item in menuList" :key="item.title"></van-tab>
    </van-tabs>
    <!-- 列表 -->
    <div class="list pad_container">
      <van-list v-model="loading" :finished="finished" finished-text="没有更多了" @load="onLoad">
        <div class="list_item" v-for="item in list" :key="item.order_id">
          <Coupon :type="type" :endTime="item.endTime" :getTime="item.getTime" :orderNum="item.order_num" :desc="item.goods_name" :img="item.img" />
        </div>
      </van-list>
    </div>
  </div>
</template>
<script>
import Coupon from '../components/Coupon'
export default {
  components: {
    Coupon
  },
  data() {
    return {
      list: [],
      menuList: [{ title: '未使用' }, { title: '已使用' }, { title: '已过期' }],
      active: 0,
      loading: false,
      finished: false,

      limit: 10,
      total: 0
    }
  },
  methods: {
    queryCouponList() {
      let { start, limit } = this
      switch (this.active) {
        case 0:
          this.$store.dispatch('getCouponListUse', {
            start,
            limit
          })
          return
        case 1:
          this.$store.dispatch('getCouponListUsed', {
            start,
            limit
          })
          return
        case 2:
          this.$store.dispatch('getCouponListExpired', {
            start,
            limit
          })
          return

        default:
          return
      }
    },
    onLoad() {
      this.queryCouponList()
      this.start += this.limit
      this.loading = false
  
    },
    switchTab() {
      this.resetQuery()
    },
    resetQuery() {
      this.start = 0
      this.list = []
      // this.list = []
      // this.loading =false
      this.queryCouponList()
    }
  },
  computed: {
    couponObj() {
      return this.$store.state.couponObj
    },
    type(){
      switch(this.active){
        case 0:
          return'use'
          case 1:
            return 'used';
            case 2:
              return 'expired'
              default:
              return 'use'
      }
    }
  },
  watch: {
    couponObj(d) {
      console.log(d)
      let { list, nums } = d
      list = list.map(item=>{
        console.log(item)
        item.img = this.formatImg(item.goods_cover)
        item.getTime = this.formatDate(item.ctime)
        item.endTime =isNaN(item.etime*1000)?null:item.etime*1000
        console.log(item.endTime)
        return item
      })
      this.list = [...this.list, ...list]
      this.total = nums * 1
      if (this.list.length >= this.total) {
        this.finished = true
        console.log(this.list.length, this.total)
      } else {
        this.finished = false
      }
    }
    // active(a) {
    //   this.resetQuery()

    // }
  }
}
</script>
<style scoped>
.header_con {
  width: 9.5733rem;
  height: 4.24rem;
  background-color: rgba(231, 0, 2, 1);
  background-image: url('../assets/icons/other/bg_d.png');
  background-repeat: no-repeat;
  background-size: contain;
  background-position: bottom;
  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.15);
  border-radius: 0.2rem;
  margin: 0.2rem auto;
}
.header_con {
  font-size: 0.4rem;
  display: flex;
  justify-content: space-around;
  align-items: center;
}
.header_con p,
.header_con div,
small {
  color: rgba(255, 255, 255, 0.753);
}
.list_item{
  margin-bottom: .2rem;
}
.header_con .num {
  color: #fff;
  font-size: 0.96rem;
}
.header_con .right {
  display: flex;
  width: 2.0133rem;
  height: 0.7467rem;
  border: 0.0267rem solid rgba(255, 255, 255, 1);
  border-radius: 0.3733rem;
  text-align: center;
  justify-content: center;
  align-items: center;
}
.van-tab__pane {
  box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.15);
  border-radius: 0.1333rem;
  overflow: hidden;
  width: 9.6rem;
  margin: 0.2rem auto;
}
.right::before {
  content: '';
  display: inline-block;
  width: 0.4rem;
  height: 0.4rem;
  background-repeat: no-repeat;
  background-size: contain;
  background-position: center;
  background-image: url('../assets/icons/other/exchange.png');
}
.van-cell {
  background: transparent;
  padding: 0;
  margin-bottom: 0.3rem;
}
</style>