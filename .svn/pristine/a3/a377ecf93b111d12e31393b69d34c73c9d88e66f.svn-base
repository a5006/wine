<template>
  <div>
    <van-cell-group>
      <van-field v-model="name" placeholder="请输入用户名" @input="handleInput(name,'name')"
          @blur="handleBlur(name,'name')"
          :error-message="errNameMsg"
       />
      <van-field
        v-model="phone"
        label="手机号"
        placeholder="请输入手机号"
        :error-message="errPhoneMsg"
        @input="handleInput(phone,'phone')"
        @blur="handleBlur(phone,'phone')"
      />
      <van-field v-model="code" placeholder="请输入验证码" @input="handleInput(code,'code')" :error-message="errCodeMsg"/>
    </van-cell-group>
  </div>
</template>
<script>
export default {
  props: {
    value: {},
    errCodeMsg:{}
  },
  data() {
    return {
      objData: {},
      name: this.value.name,
      phone: this.value.phone,
      code: this.value.code,
      errPhoneMsg: '',
      errNameMsg:'',
    }
  },
  watch: {
    value() {
      console.log(1)
    }
  },
  methods: {
    handleInput(v, k) {
      this.objData = Object.assign({}, this.value, {
        [k]: v
      })

      this.$emit('input', this.objData)
    },
    handleBlur(v, k) {
      console.log(v, k)
      var obj = {
        name:()=>{
          if(v.length===0){
            this.errNameMsg ='姓名不能为空'
                this.value.err = true
          }else{
              this.errPhoneMsg = ''
            this.value.err = false
          }
        },
        phone: () => {
          if (!/^1[3456789]\d{9}$/.test(v)) {
            this.errPhoneMsg = '手机号格式错误'
            this.value.err = true
          } else {
            this.errPhoneMsg = ''
            this.value.err = false
          }
        },
        code:()=>{

        }
      }
      obj[k]()
    }
  }
}
</script>
<style scoped>
</style>