{"remainingRequest":"/Users/silan/Desktop/code/code/partTime/wine/svnapp/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js??vue-loader-options!/Users/silan/Desktop/code/code/partTime/wine/svnapp/src/components/RichText.vue?vue&type=style&index=0&id=22f537d9&scoped=true&lang=css&","dependencies":[{"path":"/Users/silan/Desktop/code/code/partTime/wine/svnapp/src/components/RichText.vue","mtime":1573396250000},{"path":"/Users/silan/Desktop/code/code/partTime/wine/svnapp/node_modules/_css-loader@3.2.0@css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/silan/Desktop/code/code/partTime/wine/svnapp/node_modules/_vue-loader@15.7.2@vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/silan/Desktop/code/code/partTime/wine/svnapp/node_modules/_postcss-loader@3.0.0@postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/silan/Desktop/code/code/partTime/wine/svnapp/node_modules/_cache-loader@4.1.0@cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/silan/Desktop/code/code/partTime/wine/svnapp/node_modules/_vue-loader@15.7.2@vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI2FydGljbGUgaW1nIHsKICBtYXgtd2lkdGg6IDEwMCU7Cn0K"},{"version":3,"sources":["RichText.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA","file":"RichText.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <p v-html=\"renderContent\" ref=\"article\" id=\"article\"></p>\n  </div>\n</template>\n<script>\nexport default {\n  props: ['content'],\n  data() {\n    return {}\n  },\nmethods:{\n  resetImg(){\n        const img = this.$refs.article.querySelectorAll('img')\n    img.forEach(item => {\n      item.style.maxWidth = '100%'\n    })\n  }\n},\n  computed: {\n    renderContent() {\n      let s = this.content\n        .replace(/\\n/g, '<br/>')\n        .replace(/font-size:\\d+px/g, function() {\n          const arg = Array.from(arguments)\n          let fs = arg[0].match(/\\d+/)[0] / 75\n          return `font-size:${fs}rem`\n        })\n      s.replace(/\\s/g, ' &nbsp ')\n      return s\n    }\n  },\n\n  updated() {\nthis.resetImg()\n  }\n}\n</script>\n<style scoped>\n#article img {\n  max-width: 100%;\n}\n</style>"]}]}